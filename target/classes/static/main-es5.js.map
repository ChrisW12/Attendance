{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/export-students/export-students.component.ts","webpack:///src/app/export-students/export-students.component.html","webpack:///src/app/service/student-service.service.ts","webpack:///src/app/upload-students/upload-students.component.ts","webpack:///src/app/upload-students/upload-students.component.html","webpack:///src/app/user-list/user-list.component.ts","webpack:///src/app/user-list/user-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ExportStudentsComponent","window","open","StudentServiceService","http","studentsUserUrl","studentsExportUrl","get","student","post","UploadStudentsComponent","router","fileToUpload","files","item","formData","FormData","append","headers","subscribe","data","navigate","uploadSuccess","err","uploadFailure","handleFileInput","submitFile","UserListComponent","studentService","route","showSuccessMsg","showErrorMsg","console","log","snapshot","params","undefined","findAll","students","environment","production","bootstrapModule","catch","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UploadStudentsComponent } from './upload-students/upload-students.component';\nimport { ExportStudentsComponent } from './export-students/export-students.component';\n\nconst routes: Routes = [\n  { path: 'users', component: UserListComponent },\n  { path: 'uploadstudents', component: UploadStudentsComponent},\n  { path: 'exportstudents', component: ExportStudentsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n \n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n \n  title: string;\n \n  constructor() {\n    this.title = 'Paperless Attendance';\n  }\n}","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card bg-dark my-5\">\n        <div class=\"card-body\">\n          <h2 class=\"card-title text-center text-white py-3\">{{ title }}</h2>\n          <ul class=\"text-center list-inline py-2\">\n            <li class=\"list-inline-item\">\n                <a routerLink=\"/users\" class=\"btn btn-info\">View Students</a>\n              </li>\n            <li class=\"list-inline-item\">\n              <a routerLink=\"/uploadstudents\" class=\"btn btn-info\">Upload Students</a>\n                </li>\n          </ul>\n        </div>\n      </div>\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { StudentServiceService } from './service/student-service.service';\nimport { UploadStudentsComponent } from './upload-students/upload-students.component';\nimport { ExportStudentsComponent } from './export-students/export-students.component';\n \n@NgModule({\n  declarations: [\n    AppComponent,\n    UserListComponent,\n    UploadStudentsComponent,\n    ExportStudentsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [StudentServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-export-students',\n  templateUrl: './export-students.component.html',\n  styleUrls: ['./export-students.component.css']\n})\nexport class ExportStudentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    window.open('http://localhost:8080/exportstudents')\n  }\n\n}\n","<p>\n    Students have successfully been exported to .CSV.\n</p>","import { Injectable} from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport { Student } from '../model/student';\nimport { Observable } from 'rxjs';\n \n@Injectable()\nexport class StudentServiceService {\n \n  private studentsUserUrl: string;\n  private studentsExportUrl: string;\n \n  constructor(private http: HttpClient) {\n    this.studentsUserUrl = 'http://localhost:8080/users';\n    this.studentsExportUrl = 'http://localhost:8080/exportstudents';\n  }\n \n  public findAll(): Observable<Student[]> {\n    return this.http.get<Student[]>(this.studentsUserUrl);\n  }\n \n  public save(student: Student) {\n    return this.http.post<Student>(this.studentsUserUrl, student);\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { StudentServiceService } from '../service/student-service.service';\nimport { Student } from '../model/student';\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse} from '@angular/common/http';\nimport {Router} from \"@angular/router\"\n\n@Component({\n  selector: 'app-upload-students',\n  templateUrl: './upload-students.component.html',\n  styleUrls: ['./upload-students.component.css']\n})\nexport class UploadStudentsComponent implements OnInit {\n  fileToUpload: File = null;\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n  }\n\n  submitFile(): void {\n    let formData = new FormData();\n    formData.append('file', this.fileToUpload); // Append file to formdata\n    this.http.post('/uploadstudents', formData, {\n      headers: new HttpHeaders()\n    }).subscribe(\n      data => {\n        this.router.navigate(['/users', {uploadSuccess: 'true' }]);\n      },\n      err => {\n        this.router.navigate(['/users',  {uploadFailure: 'true' }]);\n      }\n    );\n  }\n}\n","<div class=\"container\">\n\n  <div align=\"center\">\n    <h2 class=\"card-title text-center text-black py-2\">Upload Students</h2>\n    <br>\n  </div>\n    <ul class=\"text-center list-inline py-2\">\n      <form method=\"POST\" action=\"/uploadstudents\" enctype=\"multipart/form-data\">\n        <li class=\"list-inline-item\">\n            <input type=\"file\" id=\"file\" accept=\".csv\" class=\"btn btn-info\" (change)=\"handleFileInput($event.target.files)\"/>\n        </li>\n        <li class=\"list-inline-item\">\n        <button (click)=\"submitFile()\" type=\"submit\" [disabled]=\"!fileToUpload\"\n                  class=\"btn btn-info\">Upload File</button>\n        </li>\n      </form>\n    </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Student } from '../model/student';\nimport { StudentServiceService } from '../service/student-service.service';\nimport {Router} from \"@angular/router\"\nimport {ActivatedRoute} from \"@angular/router\"\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n \n  students: Student[];\n  showSuccessMsg: boolean = false;\n  showErrorMsg: boolean = false;\n \n  constructor(private studentService: StudentServiceService, private router: Router, private route: ActivatedRoute) {\n  }\n \n  ngOnInit() {\n    console.log(this.route);\n\n    if(this.route.snapshot.params.uploadSuccess !== undefined && this.route.snapshot.params.uploadSuccess === 'true') {\n      this.showSuccessMsg = true;\n      this.showErrorMsg = false;\n    }\n\n    if(this.route.snapshot.params.uploadFailure !== undefined && this.route.snapshot.params.uploadFailure === 'true') {\n      this.showErrorMsg = true;\n      this.showSuccessMsg = false;\n    }\n  \n    this.studentService.findAll().subscribe(data => {\n      this.students = data;\n    });\n  }\n}\n","<div align=\"center\">\n  <h2 class=\"card-title text-center text-black py-2\">Student List</h2>\n</div>\n<div align=\"center\" *ngIf=\"showSuccessMsg\">\n  <div class=\"col-xs-12\">\n    <p class=\"alert alert-success\">\n        <strong>Successfully uploaded!</strong> You can now view added students in the list below. To add more students, go to \"Update Students\" and submit a new file.\n    </p>\n  </div>\n</div>\n<div align=\"center\" *ngIf=\"showErrorMsg\">\n  <div class=\"col-xs-12\">\n    <p class=\"alert alert-danger\">\n        <strong>Could not upload students!</strong> Please try again by going to \"Update Students\" and resubmitting the file.\n    </p>\n  </div>\n</div>\n<div class=\"card my-5\">\n  <div class=\"card-body\">\n    <table class=\"table table-bordered table-striped\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">Panther ID</th>\n          <th scope=\"col\">First Name</th>\n          <th scope=\"col\">Last Name</th>\n          <th scope=\"col\">Email</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let student of students\">\n          <td>{{ student.pantherID }}</td>\n          <td>{{ student.studentFirstName }}</td>\n          <td>{{ student.studentLastName }}</td>\n          <td><a href=\"mailto:{{ student.studentEmail }}\">{{ student.studentEmail }}</a></td>\n        </tr>\n      </tbody>\n    </table>\n    <a routerLink=\"/exportstudents\" class=\"btn btn-info\">Export Students</a>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}